name: Build and Release Iotistic appEngine

on:
 workflow_dispatch:
 push:
  branches:
      - 'master'
  # push:
  #   tags:
  #     - 'v*'   # Trigger on version tags like v1.4.0

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64, linux/arm/v7]

    env:
      GO_VERSION: 1.24.7
      DEBIAN_FRONTEND: noninteractive

    steps:
      # 1 Checkout repo
      - name: Checkout
        uses: actions/checkout@v3

      # 2 Set up Docker Buildx for cross-compilation
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3 Build multi-platform binaries using new Dockerfile
      - name: Build Iotistic engine
        uses: docker/bake-action@v2
        with:
          file: Dockerfile   # explicitly point to your new Dockerfile
          targets: binary     # matches "FROM base AS build" stage

      # 4 Package binaries
      - name: Package binaries
        run: |
          set -e
          version="${GITHUB_REF#refs/tags/}"
          arch="${{ matrix.platform }}"
          # Convert Docker platform to release-friendly name
          arch=$(echo "$arch" | sed 's#linux/##; s#arm/v#armv#g; s#v7#v7hf#g')
          mkdir -p dist
          tar -czvf dist/iotistic-engine-${version}-${arch}.tar.gz -C build/ .

      # 5 Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 6 Upload packaged binaries
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
